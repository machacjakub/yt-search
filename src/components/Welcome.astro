---
import UsersPhrases from './UsersPhrases'
---
<div class="container">
	<div class="content">
		<div class="text-content">
			<h1 class="heading">YouTube Search</h1>
			<p class="description">Search YouTube without distractions.</p>
		</div>
		<div class="search-container">
			<input 
				type="text" 
				class="styled-input" 
				placeholder="Enter your text here..."
				id="searchInput"
			/>
			<button class="search-button" id="searchButton">Search</button>
		</div>
		<UsersPhrases client:load />
	</div>
</div>
<style>
	.container {
		display: flex;
		justify-content: center;
		align-items: center;
		min-height: 100vh;
		background-color: var(--bg-color);
	}

	.content {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
		gap: 24px;
		max-width: 600px;
		width: 100%;
		padding: 0 20px;
		z-index: 200;
	}

	.text-content {
		display: flex;
		flex-direction: column;
		gap: 0;
	}

	.heading {
		color: var(--heading-color);
		font-size: 48px;
		font-weight: 700;
		margin: 0;
		text-align: left;
		font-family: 'Roboto', sans-serif;
	}

	.description {
		color: var(--description-color);
		font-size: 14px;
		letter-spacing: 0.8px;
		margin: 0;
		font-family: 'Roboto', sans-serif;
	}

	.search-container {
		display: flex;
		gap: 8px;
		width: 100%;
	}

	.styled-input {
		border: none;
		border-radius: 1rem;
		width: 100%;
		max-width: 400px;
		padding: 1rem 1.25rem;
		font-size: 1rem;
		background: var(--input-bg);
		backdrop-filter: blur(12px);
		-webkit-backdrop-filter: blur(12px);
		box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1), 0 0 10px rgba(255, 0, 0, 0.05);
		outline: none;
		transition: box-shadow 0.3s ease;
		color: var(--text-color);
	}

	.styled-input:focus {
		outline: none;
		border-color: var(--input-focus-border);
		box-shadow: 0 0 5px var(--input-focus-shadow);
	}

	.styled-input::placeholder {
		color: var(--placeholder-color);
	}

	.search-button {
		font-size: 1rem;
		background-color: var(--button-bg);
		backdrop-filter: blur(8px);
		-webkit-backdrop-filter: blur(8px);
		box-shadow: var(--button-box-shadow);
		color: white;
		padding: 1rem 1.5rem;
		border: none;
		border-radius: 1rem;
		cursor: pointer;
		font-weight: 400;
		transition: background 0.3s ease, box-shadow 0.3s ease;
	}

	.search-button:hover {
		background-color: var(--button-hover);
	}

	.search-button:active {
		transform: scale(0.98);
	}

	@media screen and (max-width: 768px) {
		.content {
			padding: 0 16px;
		}

		.heading {
			font-size: 36px;
		}

		.search-container {
			flex-direction: column;
			gap: 12px;
		}

		.styled-input {
			width: 80vw;
		}

		.search-button {
			width: 100%;
			padding: 14px 24px;
		}
	}

	@media screen and (max-width: 480px) {
		.heading {
			font-size: 32px;
		}

		.description {
			font-size: 13px;
		}

		.styled-input {
			padding: 14px 20px;
		}
	}
</style>
<script>
	function handleSearch() {
		const searchInput = document.getElementById('searchInput') as HTMLInputElement;
		if (!searchInput) return;
		console.log('vii');

		const searchQuery = searchInput.value.trim();
		console.log('duuu');

		if(!searchQuery) {
			return;
		}

		const encodedQuery = encodeURIComponent(searchQuery);
		const currentHistory = JSON.parse(localStorage.getItem('yt-search-history') ?? 'null');
		localStorage.setItem('yt-search-history', JSON.stringify(currentHistory ? [searchQuery, ...currentHistory] : [searchQuery]));
		window.location.href = `https://www.youtube.com/results?search_query=${encodedQuery}`;

		console.log('nevidu');
	}

	// Add event listeners when the page loads
	document.addEventListener('DOMContentLoaded', () => {
		const input = document.getElementById('searchInput') as HTMLInputElement;
		const button = document.getElementById('searchButton');

		if (input) {
			input.addEventListener('keypress', function(e) {
				if (e.key === 'Enter') {
					handleSearch();
				}
			});
		}

		if (button) {
			button.addEventListener('click', handleSearch);
		}
	});
</script>

